<?php

/**
 * BaseaBlogCategoryUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $blog_category_id
 * @property integer $user_id
 * @property aBlogCategory $BlogCategory
 * @property sfGuardUser $User
 * 
 * @method integer           getBlogCategoryId()   Returns the current record's "blog_category_id" value
 * @method integer           getUserId()           Returns the current record's "user_id" value
 * @method aBlogCategory     getBlogCategory()     Returns the current record's "BlogCategory" value
 * @method sfGuardUser       getUser()             Returns the current record's "User" value
 * @method aBlogCategoryUser setBlogCategoryId()   Sets the current record's "blog_category_id" value
 * @method aBlogCategoryUser setUserId()           Sets the current record's "user_id" value
 * @method aBlogCategoryUser setBlogCategory()     Sets the current record's "BlogCategory" value
 * @method aBlogCategoryUser setUser()             Sets the current record's "User" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseaBlogCategoryUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('a_blog_category_user');
        $this->hasColumn('blog_category_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));

        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('aBlogCategory as BlogCategory', array(
             'local' => 'blog_category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}